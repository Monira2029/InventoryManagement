@page "/products"
@using InventoryManagement.Data
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext _context

<h3>Products</h3>

<button class="btn btn-primary mb-3" @onclick="() => isAdding = true">Add Product</button>

@if (isAdding)
{
    <EditForm Model="newProduct" OnValidSubmit="AddProduct">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-2">
            <InputText class="form-control" @bind-Value="newProduct.Name" placeholder="Product Name" />
        </div>

        <div class="mb-2">
            <InputNumber @typeparam="int" class="form-control" @bind-Value="newProduct.Quantity" placeholder="Quantity" />
        </div>

        <div class="mb-2">
            <InputNumber @typeparam="decimal" class="form-control" @bind-Value="newProduct.Price" placeholder="Price" />
        </div>

        <div class="mb-2">
            <label>Category</label>
            <InputSelect @typeparam="int" class="form-select" @bind-Value="newProduct.CategoryId">
                <option value="">--Select--</option>
                @foreach (var c in categories)
                {
                    <option value="@c.Id">@c.Name</option>
                }
            </InputSelect>
        </div>

        <div class="mb-2">
            <label>Supplier</label>
            <InputSelect @typeparam="int" class="form-select" @bind-Value="newProduct.SupplierId">
                <option value="">--Select--</option>
                @foreach (var s in suppliers)
                {
                    <option value="@s.Id">@s.Name</option>
                }
            </InputSelect>
        </div>

        <button type="submit" class="btn btn-success">Save</button>
        <button type="button" class="btn btn-secondary" @onclick="() => isAdding = false">Cancel</button>
    </EditForm>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Qty</th>
                <th>Price</th>
                <th>Category</th>
                <th>Supplier</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in products)
            {
                <tr>
                    <td>@p.Name</td>
                    <td>@p.Quantity</td>
                    <td>@p.Price</td>
                    <td>@p.Category?.Name</td>
                    <td>@p.Supplier?.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private bool isAdding = false;
    private Product newProduct = new();
    private List<Product> products = new();
    private List<Category> categories = new();
    private List<Supplier> suppliers = new();

    protected override async Task OnInitializedAsync()
    {
        categories = await _context.Categories.OrderBy(c => c.Name).ToListAsync();
        suppliers = await _context.Suppliers.OrderBy(s => s.Name).ToListAsync();
        await LoadProducts();
    }

    private async Task AddProduct()
    {
        _context.Products.Add(newProduct);
        await _context.SaveChangesAsync();
        isAdding = false;
        newProduct = new Product();
        await LoadProducts();
    }

    private async Task LoadProducts()
    {
        products = await _context.Products
            .Include(p => p.Category)
            .Include(p => p.Supplier)
            .OrderBy(p => p.Name)
            .ToListAsync();
    }
}

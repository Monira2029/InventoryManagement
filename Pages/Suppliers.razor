@page "/suppliers"
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext _context

<h3>Suppliers</h3>
<button class="btn btn-primary mb-3" @onclick="()=>isAdding=true">Add Supplier</button>

@if (isAdding)
{
    <EditForm Model="newSupplier" OnValidSubmit="AddSupplier">
        <DataAnnotationsValidator />
        <div class="mb-2"><InputText class="form-control" @bind-value="newSupplier.Name" placeholder="Name" /></div>
        <div class="mb-2"><InputText class="form-control" @bind-value="newSupplier.ContactEmail" placeholder="Email" /></div>
        <div class="mb-2"><InputText class="form-control" @bind-value="newSupplier.PhoneNumber" placeholder="Phone" /></div>
        <button class="btn btn-success">Save</button>
        <button class="btn btn-secondary" @onclick="()=>isAdding=false">Cancel</button>
    </EditForm>
}

<table class="table table-bordered">
    <thead><tr><th>Name</th><th>Email</th><th>Phone</th><th></th></tr></thead>
    <tbody>
        @foreach (var s in suppliers)
        {
            <tr>
                <td>@s.Name</td><td>@s.ContactEmail</td><td>@s.PhoneNumber</td>
                <td><button class="btn btn-danger btn-sm" @onclick="()=>DeleteSupplier(s.Id)">Delete</button></td>
            </tr>
        }
    </tbody>
</table>

@code {
    List<Supplier> suppliers = new();
    Supplier newSupplier = new();
    bool isAdding = false;

    protected override async Task OnInitializedAsync() => suppliers = await _context.Suppliers.ToListAsync();

    async Task AddSupplier()
    {
        _context.Suppliers.Add(newSupplier);
        await _context.SaveChangesAsync();
        suppliers = await _context.Suppliers.ToListAsync();
        newSupplier = new();
        isAdding = false;
    }

    async Task DeleteSupplier(int id)
    {
        var s = await _context.Suppliers.FindAsync(id);
        if (s != null)
        {
            _context.Suppliers.Remove(s);
            await _context.SaveChangesAsync();
            suppliers = await _context.Suppliers.ToListAsync();
        }
    }
}

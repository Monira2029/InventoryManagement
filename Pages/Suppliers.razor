@using Microsoft.EntityFrameworkCore
@page "/suppliers"
@inject ApplicationDbContext Db

<h3> Suppliers</h3>

@if (suppliers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button class="btn btn-primary mb-3" @onclick="NewSupplier">Add Supplier</button>

    @if (showForm)
    {
        <EditForm Model="newSupplier" OnValidSubmit="SaveSupplier">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3">
                <label>Name</label>
                <InputText class="form-control" @bind="newSupplier.Name" />
            </div>
            <div class="mb-3">
                <label>Email</label>
                <InputText class="form-control" @bind="newSupplier.ContactEmail" />
            </div>
            <div class="mb-3">
                <label>Phone</label>
                <InputText class="form-control" @bind="newSupplier.PhoneNumber" />
            </div>

            <button type="submit" class="btn btn-success">Save</button>
            <button type="button" class="btn btn-secondary ms-2" @onclick="Cancel">Cancel</button>
        </EditForm>
    }
    else
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var s in suppliers)
                {
                    <tr>
                        <td>@s.Name</td>
                        <td>@s.ContactEmail</td>
                        <td>@s.PhoneNumber</td>
                        <td>
                            <button class="btn btn-sm btn-danger" @onclick="() => DeleteSupplier(s.Id)">ðŸ—‘ Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {
    private List<Supplier>? suppliers;
    private Supplier newSupplier = new();
    private bool showForm = false;

    protected override async Task OnInitializedAsync()
    {
        suppliers = await Db.Suppliers.ToListAsync();
    }

    void NewSupplier()
    {
        newSupplier = new();
        showForm = true;
    }

    void Cancel() => showForm = false;

    async Task SaveSupplier()
    {
        Db.Suppliers.Add(newSupplier);
        await Db.SaveChangesAsync();
        showForm = false;
        suppliers = await Db.Suppliers.ToListAsync();
    }

    async Task DeleteSupplier(int id)
    {
        var supplier = await Db.Suppliers.FindAsync(id);
        if (supplier != null)
        {
            Db.Suppliers.Remove(supplier);
            await Db.SaveChangesAsync();
            suppliers = await Db.Suppliers.ToListAsync();
        }
    }
}

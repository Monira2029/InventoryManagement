@page "/categories"
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext _context

<h3>Categories</h3>

<button class="btn btn-primary mb-3" @onclick="ShowAddForm">Add Category</button>

@if (isAdding)
{
    <EditForm Model="newCategory" OnValidSubmit="AddCategory">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="mb-2">
            <InputText class="form-control" @bind-value="newCategory.Name" placeholder="Category Name" />
        </div>
        <div class="mb-2">
            <InputText class="form-control" @bind-value="newCategory.Description" placeholder="Description" />
        </div>
        <button class="btn btn-success">Save</button>
        <button class="btn btn-secondary" @onclick="()=>isAdding=false">Cancel</button>
    </EditForm>
}

<table class="table table-bordered">
    <thead>
        <tr><th>ID</th><th>Name</th><th>Description</th><th>Actions</th></tr>
    </thead>
    <tbody>
        @foreach (var c in categories)
        {
            <tr>
                <td>@c.Id</td>
                <td>@c.Name</td>
                <td>@c.Description</td>
                <td>
                    <button class="btn btn-danger btn-sm" @onclick="()=>DeleteCategory(c.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Category> categories = new();
    private Category newCategory = new();
    private bool isAdding = false;

    protected override async Task OnInitializedAsync()
    {
        categories = await _context.Categories.ToListAsync();
    }

    void ShowAddForm() => isAdding = true;

    async Task AddCategory()
    {
        _context.Categories.Add(newCategory);
        await _context.SaveChangesAsync();
        categories = await _context.Categories.ToListAsync();
        newCategory = new();
        isAdding = false;
    }

    async Task DeleteCategory(int id)
    {
        var cat = await _context.Categories.FindAsync(id);
        if (cat != null)
        {
            _context.Categories.Remove(cat);
            await _context.SaveChangesAsync();
            categories = await _context.Categories.ToListAsync();
        }
    }
}
